import time
import sys

#Â This version is to force calculation (and it adds overhead, --release build optimises out)

def fake_inner(n: int, f) -> int:
    val = f(n) - 1
    if n > 38:
        return val + 1
    else:
        return val + 1

def fibo(n: int) -> int:
    if n < 2:
        return n
    else:
        return fake_inner(n-1, fibo) + fake_inner(n-2, fibo)


loop_count = 21
target = int(sys.argv[1])
results = []

for _ in range(loop_count):
    start = time.perf_counter_ns()
    x = fibo(target)
    end = time.perf_counter_ns()
    results.append(end - start)
    print(f"{end=} {start=} {end-start=}")

print("codon val:", x)
print(results)
results.sort()
print("Codon min:", results[0])
print("Codon max:", results[-1])
print("codon median:", results[loop_count // 2])

# codon build --release codonfibo.codon; ./codonfibo 36
